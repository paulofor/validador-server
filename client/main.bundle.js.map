{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing/app-routing.module.ts","./src/app/app-routing/routes.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/canvas-dor-ganho/canvas-dor-ganho.component.html","./src/app/canvas-dor-ganho/canvas-dor-ganho.component.scss","./src/app/canvas-dor-ganho/canvas-dor-ganho.component.ts","./src/app/canvas-mvp/canvas-mvp.component.html","./src/app/canvas-mvp/canvas-mvp.component.scss","./src/app/canvas-mvp/canvas-mvp.component.ts","./src/app/canvas-projeto/canvas-projeto.component.html","./src/app/canvas-projeto/canvas-projeto.component.scss","./src/app/canvas-projeto/canvas-projeto.component.ts","./src/app/canvas-proposta-valor/canvas-proposta-valor.component.html","./src/app/canvas-proposta-valor/canvas-proposta-valor.component.scss","./src/app/canvas-proposta-valor/canvas-proposta-valor.component.ts","./src/app/constantes/base.url.ts","./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.html","./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.scss","./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.ts","./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.html","./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.scss","./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/model/projeto.ts","./src/app/mvp-canvas-cria/mvp-canvas-cria.component.html","./src/app/mvp-canvas-cria/mvp-canvas-cria.component.scss","./src/app/mvp-canvas-cria/mvp-canvas-cria.component.ts","./src/app/mvp-canvas-edita/mvp-canvas-edita.component.html","./src/app/mvp-canvas-edita/mvp-canvas-edita.component.scss","./src/app/mvp-canvas-edita/mvp-canvas-edita.component.ts","./src/app/projeto-canvas-cria/projeto-canvas-cria.component.html","./src/app/projeto-canvas-cria/projeto-canvas-cria.component.scss","./src/app/projeto-canvas-cria/projeto-canvas-cria.component.ts","./src/app/projeto-canvas-edita/projeto-canvas-edita.component.html","./src/app/projeto-canvas-edita/projeto-canvas-edita.component.scss","./src/app/projeto-canvas-edita/projeto-canvas-edita.component.ts","./src/app/projeto-cria/projeto-cria.component.html","./src/app/projeto-cria/projeto-cria.component.scss","./src/app/projeto-cria/projeto-cria.component.ts","./src/app/projeto-edita/projeto-edita.component.html","./src/app/projeto-edita/projeto-edita.component.scss","./src/app/projeto-edita/projeto-edita.component.ts","./src/app/projeto-exibe/projeto-exibe.component.html","./src/app/projeto-exibe/projeto-exibe.component.scss","./src/app/projeto-exibe/projeto-exibe.component.ts","./src/app/projetos/projetos.component.html","./src/app/projetos/projetos.component.scss","./src/app/projetos/projetos.component.ts","./src/app/servicos/auxiliar/projeto-exemplo.ts","./src/app/servicos/projeto.service.ts","./src/app/shared/sdk/index.ts","./src/app/shared/sdk/lb.config.ts","./src/app/shared/sdk/models/BaseModels.ts","./src/app/shared/sdk/models/FireLoop.ts","./src/app/shared/sdk/models/FireLoopRef.ts","./src/app/shared/sdk/models/GanhoDorCanvasMySql.ts","./src/app/shared/sdk/models/ItemValidacaoPagina.ts","./src/app/shared/sdk/models/MvpCanvasMySql.ts","./src/app/shared/sdk/models/PaginaValidacaoWeb.ts","./src/app/shared/sdk/models/Projeto.ts","./src/app/shared/sdk/models/ProjetoCanvas.ts","./src/app/shared/sdk/models/ProjetoCanvasMySql.ts","./src/app/shared/sdk/models/ProjetoMySql.ts","./src/app/shared/sdk/models/RegistroInteresse.ts","./src/app/shared/sdk/models/User.ts","./src/app/shared/sdk/models/index.ts","./src/app/shared/sdk/services/core/auth.service.ts","./src/app/shared/sdk/services/core/base.service.ts","./src/app/shared/sdk/services/core/error.service.ts","./src/app/shared/sdk/services/core/index.ts","./src/app/shared/sdk/services/core/io.service.ts","./src/app/shared/sdk/services/core/real.time.ts","./src/app/shared/sdk/services/custom/GanhoDorCanvasMySql.ts","./src/app/shared/sdk/services/custom/ItemValidacaoPagina.ts","./src/app/shared/sdk/services/custom/MvpCanvasMySql.ts","./src/app/shared/sdk/services/custom/PaginaValidacaoWeb.ts","./src/app/shared/sdk/services/custom/Projeto.ts","./src/app/shared/sdk/services/custom/ProjetoCanvas.ts","./src/app/shared/sdk/services/custom/ProjetoCanvasMySql.ts","./src/app/shared/sdk/services/custom/ProjetoMySql.ts","./src/app/shared/sdk/services/custom/RegistroInteresse.ts","./src/app/shared/sdk/services/custom/SDKModels.ts","./src/app/shared/sdk/services/custom/User.ts","./src/app/shared/sdk/services/custom/index.ts","./src/app/shared/sdk/services/custom/logger.service.ts","./src/app/shared/sdk/services/index.ts","./src/app/shared/sdk/sockets/socket.browser.ts","./src/app/shared/sdk/sockets/socket.connections.ts","./src/app/shared/sdk/sockets/socket.driver.ts","./src/app/shared/sdk/storage/cookie.browser.ts","./src/app/shared/sdk/storage/storage.browser.ts","./src/app/shared/sdk/storage/storage.swaps.ts","./src/app/sidebar/sidebar.component.html","./src/app/sidebar/sidebar.component.scss","./src/app/sidebar/sidebar.component.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/* coloquei manualmente */\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { routes } from './routes';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing/app-routing.module.ts","import { Routes } from '@angular/router';\r\n\r\n\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { ProjetosComponent } from '../projetos/projetos.component';\r\nimport { ProjetoCriaComponent } from '../projeto-cria/projeto-cria.component';\r\n\r\nimport { CanvasProjetoComponent } from '../canvas-projeto/canvas-projeto.component';\r\nimport { CanvasMvpComponent } from '../canvas-mvp/canvas-mvp.component';\r\nimport { CanvasPropostaValorComponent } from '../canvas-proposta-valor/canvas-proposta-valor.component';\r\nimport { CanvasDorGanhoComponent } from '../canvas-dor-ganho/canvas-dor-ganho.component';\r\n\r\nexport const routes : Routes = [\r\n    { path: 'home' , component: HomeComponent },\r\n\r\n    { path: 'dorGanhoCanvas/:id' , component: CanvasDorGanhoComponent },\r\n    { path: 'valorCanvas/:id' , component: CanvasPropostaValorComponent },\r\n    { path: 'mvpCanvas/:id' , component: CanvasMvpComponent },\r\n    { path: 'projetoCanvas/:id' , component: CanvasProjetoComponent },\r\n    { path: 'projetos' , component: ProjetosComponent},\r\n    { path: 'projetos/insere' , component: ProjetoCriaComponent},\r\n    { path: '',          redirectTo: 'home', pathMatch: 'full' }\r\n]\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing/routes.ts","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n    <div class=\\\"sidebar\\\" data-color=\\\"blue\\\" data-image=\\\"\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(/assets/img/sidebar-4.jpg)\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"main-panel\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent{\r\n  title = 'app';\r\n\r\n \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProjetosComponent } from './projetos/projetos.component';\r\n\r\n/* Coloquei manualmente */\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { ProjetoCriaComponent } from './projeto-cria/projeto-cria.component';\r\nimport { ProjetoEditaComponent } from './projeto-edita/projeto-edita.component';\r\nimport { ProjetoExibeComponent } from './projeto-exibe/projeto-exibe.component'\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CanvasProjetoComponent } from './canvas-projeto/canvas-projeto.component'; \r\n\r\nimport { ProjetoService } from './servicos/projeto.service';\r\nimport { ProjetoApi, GanhoDorCanvasMySqlApi } from './shared/sdk/services/custom';\r\nimport { ProjetoCanvasApi } from './shared/sdk/services/custom/ProjetoCanvas';\r\nimport { ProjetoMySqlApi } from './shared/sdk/services/custom/ProjetoMySql';\r\nimport { ProjetoCanvasMySqlApi } from './shared/sdk/services/custom/ProjetoCanvasMySql';\r\nimport { MvpCanvasMySqlApi } from './shared/sdk/services/custom/MvpCanvasMySql';\r\n\r\nimport { HttpClient, HttpResponse, HttpClientModule } from '@angular/common/http';\r\nimport { SocketConnection } from './shared/sdk/sockets/socket.connections';\r\nimport { SocketDriver } from './shared/sdk/sockets/socket.driver';\r\nimport { SDKModels } from './shared/sdk/services/custom/SDKModels';\r\nimport { LoopBackAuth } from './shared/sdk/services/core/auth.service';\r\nimport { InternalStorage } from './shared/sdk/storage/storage.swaps';\r\nimport { ProjetoCanvasCriaComponent } from './projeto-canvas-cria/projeto-canvas-cria.component';\r\n\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { MatFormFieldModule, MatInputModule, MatButtonModule } from '@angular/material';\r\nimport { ProjetoCanvasEditaComponent } from './projeto-canvas-edita/projeto-canvas-edita.component';\r\nimport { CanvasMvpComponent } from './canvas-mvp/canvas-mvp.component';\r\nimport { MvpCanvasCriaComponent } from './mvp-canvas-cria/mvp-canvas-cria.component';\r\nimport { MvpCanvasEditaComponent } from './mvp-canvas-edita/mvp-canvas-edita.component';\r\nimport { CanvasPropostaValorComponent } from './canvas-proposta-valor/canvas-proposta-valor.component';\r\nimport { CanvasDorGanhoComponent } from './canvas-dor-ganho/canvas-dor-ganho.component';\r\nimport { DorGanhoCanvasCriaComponent } from './dor-ganho-canvas-cria/dor-ganho-canvas-cria.component';\r\nimport { DorGanhoCanvasEditaComponent } from './dor-ganho-canvas-edita/dor-ganho-canvas-edita.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    HomeComponent,\r\n    ProjetosComponent,\r\n    ProjetoCriaComponent,\r\n    ProjetoEditaComponent,\r\n    ProjetoExibeComponent,\r\n    CanvasProjetoComponent,\r\n    ProjetoCanvasCriaComponent,\r\n    ProjetoCanvasEditaComponent,\r\n    CanvasMvpComponent,\r\n    MvpCanvasCriaComponent,\r\n    MvpCanvasEditaComponent,\r\n    CanvasPropostaValorComponent,\r\n    CanvasDorGanhoComponent,\r\n    DorGanhoCanvasCriaComponent,\r\n    DorGanhoCanvasEditaComponent\r\n  ],\r\n  entryComponents: [\r\n    ProjetoCanvasCriaComponent,\r\n    ProjetoCanvasEditaComponent,\r\n    MvpCanvasCriaComponent,\r\n    MvpCanvasEditaComponent,\r\n    DorGanhoCanvasCriaComponent,\r\n    DorGanhoCanvasEditaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule ,\r\n    MatDialogModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [\r\n    ProjetoService,\r\n    ProjetoApi,\r\n    ProjetoCanvasApi,\r\n    HttpClient, \r\n    SocketConnection  , \r\n    SocketDriver,\r\n    SDKModels,\r\n    LoopBackAuth,\r\n    InternalStorage,\r\n    ProjetoMySqlApi,\r\n    ProjetoCanvasMySqlApi,\r\n    MvpCanvasMySqlApi,\r\n    GanhoDorCanvasMySqlApi\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"assets/css/vendor.36bb0ebb.css\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"assets/css/main.b03f2ea9.css\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"assets/css/canvas-digicom2.css\\\">\\r\\n\\r\\n<div class=\\\"dashboard\\\" style=\\\"padding-top: 0px;\\\">\\r\\n  <div class=\\\"canvas-container\\\" id=\\\"canvas\\\">\\r\\n    <header class=\\\"header-canvas-core\\\">\\r\\n      <span *ngIf=\\\"projeto\\\" class=\\\"canvas-input-title\\\">{{projeto.nome}} - Dor/Ganho Canvas</span>\\r\\n    </header>\\r\\n\\r\\n    <div class=\\\"canvas-core-container\\\">\\r\\n      <div class=\\\"canvas-core\\\">\\r\\n\\r\\n        <!-- Coluna 1-->\\r\\n        <section class=\\\"canvas-coluna-ganhodor\\\">\\r\\n          <!-- Painel A -->\\r\\n          <div class=\\\"canvas-board atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Produtos & Servicos</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp-coluna\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of produtosServicos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('PRODUTO_SERVICO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n\\r\\n        </section>\\r\\n\\r\\n\\r\\n        <!-- Coluna 2-->\\r\\n        <section class=\\\"canvas-coluna-ganhodor\\\">\\r\\n          <!-- Painel A -->\\r\\n          <div class=\\\"canvas-board -half atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Criadores de Ganho</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of criaGanhos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('CRIA_GANHO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <!-- Painel B -->\\r\\n          <div class=\\\"canvas-board -half recursos \\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title green\\\">Alivio de Dores</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\" style=\\\"overflow-y: scroll;\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of aliviaDores\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('ALIVIA_DOR')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Coluna 3-->\\r\\n        <section class=\\\"canvas-coluna-ganhodor\\\">\\r\\n          <!-- Painel A -->\\r\\n          <div class=\\\"canvas-board -half atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Ganhos</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of ganhos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('GANHO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <!-- Painel B -->\\r\\n          <div class=\\\"canvas-board -half recursos \\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title green\\\">Dores</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\" style=\\\"overflow-y: scroll;\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of dores\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('DOR')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n        <!-- Coluna 4-->\\r\\n        <section class=\\\"canvas-coluna-ganhodor\\\">\\r\\n          <!-- Painel A -->\\r\\n          <div class=\\\"canvas-board atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Tarefas</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp-coluna\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of tarefas\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('TAREFA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n\\r\\n        </section>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-dor-ganho/canvas-dor-ganho.component.html\n// module id = ./src/app/canvas-dor-ganho/canvas-dor-ganho.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-dor-ganho/canvas-dor-ganho.component.scss\n// module id = ./src/app/canvas-dor-ganho/canvas-dor-ganho.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ProjetoMySql, GanhoDorCanvasMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi, GanhoDorCanvasMySqlApi } from '../shared/sdk/services/custom';\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { DorGanhoCanvasEditaComponent } from '../dor-ganho-canvas-edita/dor-ganho-canvas-edita.component';\r\nimport { DorGanhoCanvasCriaComponent } from '../dor-ganho-canvas-cria/dor-ganho-canvas-cria.component';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BASE_URL, API_VERSION } from '../constantes/base.url';\r\nimport { LoopBackConfig } from '../shared/sdk/';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-canvas-dor-ganho',\r\n  templateUrl: './canvas-dor-ganho.component.html',\r\n  styleUrls: ['./canvas-dor-ganho.component.scss']\r\n})\r\nexport class CanvasDorGanhoComponent implements OnInit {\r\n\r\n\r\n  itensCanvas: GanhoDorCanvasMySql[];\r\n  projeto: ProjetoMySql;\r\n  errMess: string;\r\n\r\n  produtosServicos: GanhoDorCanvasMySql[];\r\n  criaGanhos: GanhoDorCanvasMySql[];\r\n  aliviaDores : GanhoDorCanvasMySql[];\r\n  ganhos: GanhoDorCanvasMySql[];\r\n  dores: GanhoDorCanvasMySql[];\r\n  tarefas: GanhoDorCanvasMySql[];\r\n\r\n  constructor(private dialog: MatDialog, private projetoService: ProjetoMySqlApi,\r\n    private canvasService: GanhoDorCanvasMySqlApi,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n \r\n  ngOnInit() {\r\n    console.log('CanvasDorGanhoComponent');\r\n    LoopBackConfig.setBaseURL(BASE_URL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n\r\n    this.carregaDados();\r\n\r\n  }\r\n\r\n  openDialog(tipoArea) {\r\n    console.log('Tipo:', tipoArea);\r\n    this.dialog.afterAllClosed.subscribe(result => {\r\n      console.log(`Dialog result: ${result}`); \r\n      this.carregaDados();\r\n    });\r\n    this.dialog.open(DorGanhoCanvasCriaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        tipo: tipoArea\r\n      }\r\n    });\r\n  }\r\n\r\n  editaItem(projetoCanvas) {\r\n    console.log('ID Edicao: ' + JSON.stringify(projetoCanvas));\r\n    this.dialog.open(DorGanhoCanvasEditaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        edicao: projetoCanvas\r\n      }\r\n    });\r\n  }\r\n\r\n  carregaDados() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      let userId = params['id'];\r\n      console.log('IdProjeto: ', userId);\r\n      this.projetoService.findById(userId)\r\n        .subscribe((valor: ProjetoMySql) => {\r\n          console.log('Projeto: ' + JSON.stringify(valor));\r\n          this.projeto = valor;\r\n          this.carregaCanvas();\r\n        })\r\n    });\r\n\r\n  }\r\n\r\n  carregaCanvas() {\r\n    this.projetoService.getGanhoDorCanvasMySqls(this.projeto.id)\r\n      .subscribe((valor: GanhoDorCanvasMySql[]) => {\r\n        console.log('Lista: ' + JSON.stringify(valor));\r\n        this.itensCanvas = valor;\r\n        this.distribuiItensCanvas();\r\n        \r\n      })\r\n\r\n  }\r\n\r\n\r\n  distribuiItensCanvas() {\r\n    this.produtosServicos = this.itensCanvas.filter(\r\n      item => item.tipo === 'PRODUTO_SERVICO');\r\n    this.criaGanhos = this.itensCanvas.filter(\r\n      item => item.tipo === 'CRIA_GANHO');\r\n    this.aliviaDores = this.itensCanvas.filter(\r\n      item => item.tipo === 'ALIVIA_DOR');\r\n    this.dores = this.itensCanvas.filter(\r\n      item => item.tipo === 'DOR');\r\n    this.ganhos = this.itensCanvas.filter(\r\n      item => item.tipo === 'GANHO');\r\n    this.tarefas = this.itensCanvas.filter(\r\n      item => item.tipo === 'TAREFA');\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/canvas-dor-ganho/canvas-dor-ganho.component.ts","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"assets/css/vendor.36bb0ebb.css\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"assets/css/main.b03f2ea9.css\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"assets/css/canvas-digicom2.css\\\">\\r\\n\\r\\n\\r\\n<div class=\\\"dashboard\\\" style=\\\"padding-top: 0px;\\\">\\r\\n  <div class=\\\"canvas-container\\\" id=\\\"canvas\\\">\\r\\n    <header class=\\\"header-canvas-core\\\">\\r\\n      <!--input type=\\\"text\\\" placeholder=\\\"Título do Canvas\\\" class=\\\"canvas-input-title\\\" value=\\\"xxx\\\">-->\\r\\n      <span *ngIf=\\\"projeto\\\" class=\\\"canvas-input-title\\\">{{projeto.nome}} - MVP Canvas</span>\\r\\n    </header>\\r\\n    <div class=\\\"canvas-core-container\\\">\\r\\n      <div class=\\\"canvas-core\\\">\\r\\n\\r\\n        <!-- Coluna 1-->\\r\\n        <section class=\\\"canvas-coluna-mvp\\\">\\r\\n          <!-- Painel A -->\\r\\n          <div class=\\\"canvas-board -half atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Personas & Plataformas</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of personas\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('PERSONA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <!-- Painel B -->\\r\\n          <div class=\\\"canvas-board -half recursos \\\"  >\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title green\\\">Jornadas</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\" style=\\\"overflow-y: scroll;\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of jornadas\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('JORNADA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n        <!-- Coluna 2-->\\r\\n        <section class=\\\"canvas-coluna-mvp\\\">\\r\\n\\r\\n          <!-- Painel a -->\\r\\n          <div class=\\\"canvas-board -terco proposta\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title yellow\\\">Visão do MVP</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp-menor\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of visoes\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('VISAO_MVP')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n\\r\\n          <!-- Painel b -->\\r\\n          <div class=\\\"canvas-board -terco proposta\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title yellow\\\">Funcionalidades</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp-menor\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of funcionalidades\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('FUNCIONALIDADE')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n\\r\\n          <!-- Painel b -->\\r\\n          <div class=\\\"canvas-board -terco proposta\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title yellow\\\">Custo & Cronograma</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp-menor\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of custos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('CUSTO_CRONOGRAMA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n\\r\\n        </section>\\r\\n\\r\\n        <!-- Coluna 3-->\\r\\n        <section class=\\\"canvas-coluna-mvp\\\">\\r\\n          <div class=\\\"canvas-board -half relacao\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title orange\\\">Resultado Esperado</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of resultados\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('RESULTADO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <div class=\\\"canvas-board -half canais\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title blue\\\">Métricas para validar as hipóteses de negócio</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-post-mvp\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of metricas\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('METRICA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-mvp/canvas-mvp.component.html\n// module id = ./src/app/canvas-mvp/canvas-mvp.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-mvp/canvas-mvp.component.scss\n// module id = ./src/app/canvas-mvp/canvas-mvp.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ProjetoMySql, MvpCanvasMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\nimport { MvpCanvasMySqlApi } from '../shared/sdk/services/custom/MvpCanvasMySql';\r\n\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { MvpCanvasEditaComponent } from '../mvp-canvas-edita/mvp-canvas-edita.component';\r\nimport { MvpCanvasCriaComponent } from '../mvp-canvas-cria/mvp-canvas-cria.component';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BASE_URL, API_VERSION } from '../constantes/base.url';\r\nimport { LoopBackConfig } from '../shared/sdk/';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-canvas-mvp',\r\n  templateUrl: './canvas-mvp.component.html',\r\n  styleUrls: ['./canvas-mvp.component.scss']\r\n})\r\nexport class CanvasMvpComponent implements OnInit {\r\n\r\n  itensCanvas: MvpCanvasMySql[];\r\n  projeto: ProjetoMySql;\r\n  errMess: string;\r\n\r\n  personas: MvpCanvasMySql[];\r\n  jornadas: MvpCanvasMySql[];\r\n  visoes: MvpCanvasMySql[];\r\n  funcionalidades: MvpCanvasMySql[];\r\n  custos: MvpCanvasMySql[];\r\n  resultados: MvpCanvasMySql[];\r\n  metricas: MvpCanvasMySql[];\r\n\r\n\r\n\r\n  constructor(private dialog: MatDialog, private projetoService: ProjetoMySqlApi,\r\n    private canvasService: MvpCanvasMySqlApi,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('CanvasMvpComponent');\r\n    LoopBackConfig.setBaseURL(BASE_URL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n\r\n    this.carregaDados();\r\n\r\n  }\r\n\r\n  openDialog(tipoArea) {\r\n    console.log('Tipo:', tipoArea);\r\n    this.dialog.afterAllClosed.subscribe(result => {\r\n      console.log(`Dialog result: ${result}`); \r\n      this.carregaDados();\r\n    });\r\n    this.dialog.open(MvpCanvasCriaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        tipo: tipoArea\r\n      }\r\n    });\r\n  }\r\n\r\n  editaItem(projetoCanvas) {\r\n    console.log('ID Edicao: ' + JSON.stringify(projetoCanvas));\r\n    this.dialog.open(MvpCanvasEditaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        edicao: projetoCanvas\r\n      }\r\n    });\r\n  }\r\n\r\n  carregaDados() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      let userId = params['id'];\r\n      console.log('IdProjeto: ', userId);\r\n      this.projetoService.findById(userId)\r\n        .subscribe((valor: ProjetoMySql) => {\r\n          console.log('Projeto: ' + JSON.stringify(valor));\r\n          this.projeto = valor;\r\n          this.carregaCanvas();\r\n        })\r\n    });\r\n\r\n  }\r\n\r\n  carregaCanvas() {\r\n    this.projetoService.getMvpCanvasMySqls(this.projeto.id)\r\n      .subscribe((valor: MvpCanvasMySql[]) => {\r\n        console.log('Lista: ' + JSON.stringify(valor));\r\n        this.itensCanvas = valor;\r\n        this.distribuiItensCanvas();\r\n      })\r\n\r\n  }\r\n\r\n\r\n  distribuiItensCanvas() {\r\n    this.personas = this.itensCanvas.filter(\r\n      item => item.tipo === 'PERSONA');\r\n    this.jornadas = this.itensCanvas.filter(\r\n      item => item.tipo === 'JORNADA');\r\n    this.visoes = this.itensCanvas.filter(\r\n      item => item.tipo === 'VISAO_MVP');\r\n    this.funcionalidades = this.itensCanvas.filter(\r\n      item => item.tipo === 'FUNCIONALIDADE');\r\n    this.resultados = this.itensCanvas.filter(\r\n      item => item.tipo === 'RESULTADO');\r\n    this.custos = this.itensCanvas.filter(\r\n      item => item.tipo === 'CUSTO_CRONOGRAMA');\r\n    this.metricas = this.itensCanvas.filter(\r\n      item => item.tipo === 'METRICA');\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/canvas-mvp/canvas-mvp.component.ts","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"assets/css/vendor.36bb0ebb.css\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"assets/css/main.b03f2ea9.css\\\">\\r\\n\\r\\n<div class=\\\"dashboard\\\" style=\\\"padding-top: 0px;\\\">\\r\\n  <div class=\\\"canvas-container\\\" id=\\\"canvas\\\">\\r\\n    <header class=\\\"header-canvas-core\\\">\\r\\n      <!--input type=\\\"text\\\" placeholder=\\\"Título do Canvas\\\" class=\\\"canvas-input-title\\\" value=\\\"xxx\\\">-->\\r\\n      <span class=\\\"canvas-input-title\\\">{{projeto.nome}}</span>\\r\\n    </header>\\r\\n    <div class=\\\"canvas-core-container\\\">\\r\\n      <div class=\\\"canvas-core\\\">\\r\\n        <div class=\\\"canvas-column\\\">\\r\\n          <div class=\\\"canvas-board parceiros\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title red\\\">Parceiros Chave</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of parceiros\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('PARCEIRO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <section class=\\\"canvas-column\\\">\\r\\n          <div class=\\\"canvas-board -half atividades\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title pink\\\">Atividades Chave</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of atividades\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\"  (click)=\\\"openDialog('ATIVIDADE')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <div class=\\\"canvas-board -half recursos\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title green\\\">Recursos Chave</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of recursos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('RECURSO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n        <section class=\\\"canvas-column\\\">\\r\\n          <div class=\\\"canvas-board proposta\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title yellow\\\">Proposta de Valor</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of valores\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('VALOR')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n        <section class=\\\"canvas-column\\\">\\r\\n          <div class=\\\"canvas-board -half relacao\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title orange\\\">Relação com o Cliente</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of relacionamentos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('RELACIONAMENTO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n          <div class=\\\"canvas-board -half canais\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title blue\\\">Canais</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of canais\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('CANAL')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n        <section class=\\\"canvas-column\\\">\\r\\n          <div class=\\\"canvas-board segmentos\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title bluegreen\\\">Segmentos de Mercado</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <!-- -->\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of segmentos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n              <!-- -->\\r\\n\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('SEGMENTO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n        <section class=\\\"canvas-column -half\\\">\\r\\n          <div class=\\\"canvas-board estrutura\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title purple\\\">Estrutura de Custos</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of custos\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('CUSTO')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n        <section class=\\\"canvas-column -half\\\">\\r\\n          <div class=\\\"canvas-board fontes\\\">\\r\\n            <header class=\\\"board-header\\\">\\r\\n              <h3 class=\\\"board-title brown\\\">Fontes de Renda</h3>\\r\\n            </header>\\r\\n            <ul class=\\\"canvas-posts\\\">\\r\\n              <li class=\\\"canvas-postit yellow\\\" *ngFor=\\\"let projetoCanvas of receitas\\\">\\r\\n                <p class=\\\"postit-name\\\">{{projetoCanvas.descricao}}</p>\\r\\n                <button class=\\\"btn\\\" (click)=\\\"editaItem(projetoCanvas)\\\">\\r\\n                  <span class=\\\"s s-pencil\\\"></span>\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"add-postit\\\" (click)=\\\"openDialog('RECEITA')\\\">+ Adicionar post-it</button>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-projeto/canvas-projeto.component.html\n// module id = ./src/app/canvas-projeto/canvas-projeto.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-projeto/canvas-projeto.component.scss\n// module id = ./src/app/canvas-projeto/canvas-projeto.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\nimport { ProjetoCanvasMySql } from '../shared/sdk/models';\r\nimport { ProjetoCanvasMySqlApi } from '../shared/sdk/services/custom/ProjetoCanvasMySql';\r\n\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { ProjetoCanvasEditaComponent } from '../projeto-canvas-edita/projeto-canvas-edita.component';\r\nimport { ProjetoCanvasCriaComponent } from '../projeto-canvas-cria/projeto-canvas-cria.component';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BASE_URL, API_VERSION } from '../constantes/base.url';\r\nimport { LoopBackConfig } from '../shared/sdk/';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-canvas-projeto',\r\n  templateUrl: './canvas-projeto.component.html',\r\n  styleUrls: ['./canvas-projeto.component.scss']\r\n})\r\nexport class CanvasProjetoComponent implements OnInit {\r\n\r\n  itensCanvas: ProjetoCanvasMySql[];\r\n  projeto: ProjetoMySql;\r\n  errMess: string;\r\n\r\n  parceiros: ProjetoCanvasMySql[] = [];\r\n  segmentos: ProjetoCanvasMySql[] = [];\r\n  valores: ProjetoCanvasMySql[] = [];\r\n  receitas: ProjetoCanvasMySql[] = [];\r\n  atividades: ProjetoCanvasMySql[] = [];\r\n  recursos: ProjetoCanvasMySql[] = [];\r\n  relacionamentos: ProjetoCanvasMySql[];\r\n  canais: ProjetoCanvasMySql[] = [];\r\n  custos: ProjetoCanvasMySql[] = [];\r\n\r\n\r\n\r\n  constructor(private dialog: MatDialog, private projetoService: ProjetoMySqlApi,\r\n    private projetoCanvasService: ProjetoCanvasMySqlApi,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('CanvasProjetoComponent');\r\n    LoopBackConfig.setBaseURL(BASE_URL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n\r\n    this.carregaDados();\r\n\r\n  }\r\n\r\n  openDialog(tipoArea) {\r\n    console.log('Tipo:', tipoArea);\r\n    this.dialog.afterAllClosed.subscribe(result => {\r\n      console.log(`Dialog result: ${result}`); \r\n      this.carregaDados();\r\n    });\r\n    this.dialog.open(ProjetoCanvasCriaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        tipo: tipoArea\r\n      }\r\n    });\r\n  }\r\n\r\n  editaItem(projetoCanvas) {\r\n    console.log('ID Edicao: ' + JSON.stringify(projetoCanvas));\r\n    this.dialog.open(ProjetoCanvasEditaComponent, {\r\n      width: '600px',\r\n      data: {\r\n        projeto: this.projeto,\r\n        edicao: projetoCanvas\r\n      }\r\n    });\r\n  }\r\n\r\n  carregaDados() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      let userId = params['id'];\r\n      console.log('Id: ', userId);\r\n      this.projetoService.findById(userId)\r\n        .subscribe((valor: ProjetoMySql) => {\r\n          console.log('Item: ' + JSON.stringify(valor));\r\n          this.projeto = valor;\r\n          this.carregaCanvas();\r\n        })\r\n    });\r\n\r\n  }\r\n\r\n  carregaCanvas() {\r\n    this.projetoService.getProjetoCanvasMySqls(this.projeto.id)\r\n      .subscribe((valor: ProjetoCanvasMySql[]) => {\r\n        console.log('Lista: ' + JSON.stringify(valor));\r\n        this.itensCanvas = valor;\r\n        this.distribuiItensCanvas();\r\n      })\r\n\r\n  }\r\n\r\n\r\n  distribuiItensCanvas() {\r\n    this.parceiros = this.itensCanvas.filter(\r\n      item => item.tipo === 'PARCEIRO');\r\n    this.segmentos = this.itensCanvas.filter(\r\n      item => item.tipo === 'SEGMENTO');\r\n    this.valores = this.itensCanvas.filter(\r\n      item => item.tipo === 'VALOR');\r\n    this.receitas = this.itensCanvas.filter(\r\n      item => item.tipo === 'RECEITA');\r\n    this.atividades = this.itensCanvas.filter(\r\n      item => item.tipo === 'ATIVIDADE');\r\n    this.recursos = this.itensCanvas.filter(\r\n      item => item.tipo === 'RECURSO');\r\n    this.relacionamentos = this.itensCanvas.filter(\r\n      item => item.tipo === 'RELACIONAMENTO');\r\n    this.canais = this.itensCanvas.filter(\r\n      item => item.tipo === 'CANAL');\r\n    this.custos = this.itensCanvas.filter(\r\n      item => item.tipo === 'CUSTO');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/canvas-projeto/canvas-projeto.component.ts","module.exports = \"<p>\\r\\n  canvas-proposta-valor works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-proposta-valor/canvas-proposta-valor.component.html\n// module id = ./src/app/canvas-proposta-valor/canvas-proposta-valor.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/canvas-proposta-valor/canvas-proposta-valor.component.scss\n// module id = ./src/app/canvas-proposta-valor/canvas-proposta-valor.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-canvas-proposta-valor',\r\n  templateUrl: './canvas-proposta-valor.component.html',\r\n  styleUrls: ['./canvas-proposta-valor.component.scss']\r\n})\r\nexport class CanvasPropostaValorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/canvas-proposta-valor/canvas-proposta-valor.component.ts","export const BASE_URL = 'http://validacao.kinghost.net:21101';\r\n//export const BASE_URL = 'http://localhost:21101';\r\nexport const API_VERSION = 'api';\n\n\n// WEBPACK FOOTER //\n// ./src/app/constantes/base.url.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\r\\n\\r\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field >\\r\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\r\\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button>Enviar</button>\\r\\n  <button mat-button mat-dialog-close>Cancelar</button>\\r\\n</mat-dialog-actions>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.html\n// module id = ./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.scss\n// module id = ./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { GanhoDorCanvasMySql } from '../shared/sdk/models';\r\nimport { GanhoDorCanvasMySqlApi } from '../shared/sdk/services/custom';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dor-ganho-canvas-cria',\r\n  templateUrl: './dor-ganho-canvas-cria.component.html',\r\n  styleUrls: ['./dor-ganho-canvas-cria.component.scss']\r\n})\r\nexport class DorGanhoCanvasCriaComponent implements OnInit {\r\n\r\n  projeto: ProjetoMySql;\r\n  tipo: string;\r\n  model: GanhoDorCanvasMySql;  \r\n\r\n  constructor(private servico: ProjetoMySqlApi, public dialogRef: \r\n        MatDialogRef<DorGanhoCanvasCriaComponent>\r\n    , @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  onSubmit() {\r\n    console.log('Model: ' + JSON.stringify(this.model));\r\n    this.servico.createGanhoDorCanvasMySqls(this.projeto.id, this.model, (err, obj) => {\r\n        console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e: any) => {\r\n        console.log(JSON.stringify(e));\r\n        this.closeDialog();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Data: ', JSON.stringify(this.data));\r\n    this.model = new GanhoDorCanvasMySql();\r\n    this.projeto = this.data.projeto;\r\n    this.tipo = this.data.tipo;\r\n    this.model.projetoMySqlId = this.projeto.id;\r\n    this.model.tipo = this.tipo;\r\n\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close('Pizza!');\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dor-ganho-canvas-cria/dor-ganho-canvas-cria.component.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\r\\n\\r\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field >\\r\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\r\\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button>Enviar</button>\\r\\n  <button mat-button mat-dialog-close>Cancelar</button>\\r\\n</mat-dialog-actions>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.html\n// module id = ./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.scss\n// module id = ./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { GanhoDorCanvasMySql } from '../shared/sdk/models';\r\nimport { GanhoDorCanvasMySqlApi } from '../shared/sdk/services/custom';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dor-ganho-canvas-edita',\r\n  templateUrl: './dor-ganho-canvas-edita.component.html',\r\n  styleUrls: ['./dor-ganho-canvas-edita.component.scss']\r\n})\r\nexport class DorGanhoCanvasEditaComponent implements OnInit {\r\n\r\n  projeto: ProjetoMySql;\r\n  tipo: string;\r\n  model: GanhoDorCanvasMySql;\r\n\r\n  constructor(private servico: GanhoDorCanvasMySqlApi, public dialogRef: MatDialogRef<DorGanhoCanvasEditaComponent>\r\n    , @Inject(MAT_DIALOG_DATA) public data: any) { \r\n      console.log('MvpCanvasEditaComponent');\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log('Model: ' + JSON.stringify(this.model));\r\n    this.servico\r\n      .updateAttributes(this.model.id, this.model, (err, obj) => {\r\n        console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e: any) => {\r\n        console.log(JSON.stringify(e));\r\n        this.closeDialog();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Data: ', JSON.stringify(this.data));\r\n    this.model = this.data.edicao;\r\n    this.projeto = this.data.projeto;\r\n    //this.tipo = this.data.tipo;\r\n    //this.model.projetoMySqlId = this.projeto.id;\r\n    //this.model.tipo = this.tipo;\r\n\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close('Pizza!');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dor-ganho-canvas-edita/dor-ganho-canvas-edita.component.ts","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.scss\n// module id = ./src/app/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { BASE_URL, API_VERSION } from '../constantes/base.url';\r\nimport { LoopBackConfig } from '../shared/sdk/';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    LoopBackConfig.setBaseURL(BASE_URL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","export class Projeto {\r\n\r\n    constructor(\r\n      public id:number,\r\n      public nome: string,\r\n      public mercado: string,\r\n      public valor: string,\r\n      public dor: string\r\n    ) {  }\r\n  \r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/projeto.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\r\\n\\r\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field >\\r\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\r\\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button>Enviar</button>\\r\\n  <button mat-button mat-dialog-close>Cancelar</button>\\r\\n</mat-dialog-actions>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mvp-canvas-cria/mvp-canvas-cria.component.html\n// module id = ./src/app/mvp-canvas-cria/mvp-canvas-cria.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mvp-canvas-cria/mvp-canvas-cria.component.scss\n// module id = ./src/app/mvp-canvas-cria/mvp-canvas-cria.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { MvpCanvasMySql } from '../shared/sdk/models/MvpCanvasMySql';\r\nimport { MvpCanvasMySqlApi } from '../shared/sdk/services/custom/MvpCanvasMySql';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mvp-canvas-cria',\r\n  templateUrl: './mvp-canvas-cria.component.html',\r\n  styleUrls: ['./mvp-canvas-cria.component.scss']\r\n})\r\nexport class MvpCanvasCriaComponent implements OnInit {\r\n\r\n  projeto: ProjetoMySql;\r\n  tipo: string;\r\n  model: MvpCanvasMySql;  \r\n\r\n  constructor(private servico: ProjetoMySqlApi, public dialogRef: MatDialogRef<MvpCanvasCriaComponent>\r\n    , @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  onSubmit() {\r\n    console.log('Model: ' + JSON.stringify(this.model));\r\n    this.servico.createMvpCanvasMySqls(this.projeto.id, this.model, (err, obj) => {\r\n        console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e: any) => {\r\n        console.log(JSON.stringify(e));\r\n        this.closeDialog();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Data: ', JSON.stringify(this.data));\r\n    this.model = new MvpCanvasMySql();\r\n    this.projeto = this.data.projeto;\r\n    this.tipo = this.data.tipo;\r\n    this.model.projetoMySqlId = this.projeto.id;\r\n    this.model.tipo = this.tipo;\r\n\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close('Pizza!');\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mvp-canvas-cria/mvp-canvas-cria.component.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\r\\n\\r\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field >\\r\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\r\\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button>Enviar</button>\\r\\n  <button mat-button mat-dialog-close>Cancelar</button>\\r\\n</mat-dialog-actions>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mvp-canvas-edita/mvp-canvas-edita.component.html\n// module id = ./src/app/mvp-canvas-edita/mvp-canvas-edita.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mvp-canvas-edita/mvp-canvas-edita.component.scss\n// module id = ./src/app/mvp-canvas-edita/mvp-canvas-edita.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { MvpCanvasMySql } from '../shared/sdk/models/MvpCanvasMySql';\r\nimport { MvpCanvasMySqlApi } from '../shared/sdk/services/custom/MvpCanvasMySql';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-mvp-canvas-edita',\r\n  templateUrl: './mvp-canvas-edita.component.html',\r\n  styleUrls: ['./mvp-canvas-edita.component.scss']\r\n})\r\nexport class MvpCanvasEditaComponent implements OnInit {\r\n\r\n  projeto: ProjetoMySql;\r\n  tipo: string;\r\n  model: MvpCanvasMySql;\r\n\r\n  constructor(private servico: MvpCanvasMySqlApi, public dialogRef: MatDialogRef<MvpCanvasEditaComponent>\r\n    , @Inject(MAT_DIALOG_DATA) public data: any) { \r\n      console.log('MvpCanvasEditaComponent');\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log('Model: ' + JSON.stringify(this.model));\r\n    this.servico\r\n      .updateAttributes(this.model.id, this.model, (err, obj) => {\r\n        console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e: any) => {\r\n        console.log(JSON.stringify(e));\r\n        this.closeDialog();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Data: ', JSON.stringify(this.data));\r\n    this.model = this.data.edicao;\r\n    this.projeto = this.data.projeto;\r\n    //this.tipo = this.data.tipo;\r\n    //this.model.projetoMySqlId = this.projeto.id;\r\n    //this.model.tipo = this.tipo;\r\n\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close('Pizza!');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mvp-canvas-edita/mvp-canvas-edita.component.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\r\\n\\r\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field >\\r\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\r\\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button>Enviar</button>\\r\\n  <button mat-button mat-dialog-close>Cancelar</button>\\r\\n</mat-dialog-actions>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-canvas-cria/projeto-canvas-cria.component.html\n// module id = ./src/app/projeto-canvas-cria/projeto-canvas-cria.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-canvas-cria/projeto-canvas-cria.component.scss\n// module id = ./src/app/projeto-canvas-cria/projeto-canvas-cria.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { ProjetoCanvasMySql } from '../shared/sdk/models/ProjetoCanvasMySql';\r\nimport { ProjetoCanvasMySqlApi } from '../shared/sdk/services/custom/ProjetoCanvasMySql';\r\n\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-projeto-canvas-cria',\r\n  templateUrl: './projeto-canvas-cria.component.html',\r\n  styleUrls: ['./projeto-canvas-cria.component.scss']\r\n})\r\nexport class ProjetoCanvasCriaComponent implements OnInit {\r\n\r\n  projeto: ProjetoMySql;\r\n  tipo: string;\r\n  model: ProjetoCanvasMySql;\r\n\r\n  constructor(private servico: ProjetoMySqlApi, public dialogRef: MatDialogRef<ProjetoCanvasCriaComponent>\r\n    , @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  onSubmit() {\r\n    console.log('Model: ' + JSON.stringify(this.model));\r\n    this.servico\r\n      .createProjetoCanvasMySqls(this.projeto.id, this.model, (err, obj) => {\r\n        console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e: any) => {\r\n        console.log(JSON.stringify(e));\r\n        this.closeDialog();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Data: ', JSON.stringify(this.data));\r\n    this.model = new ProjetoCanvasMySql();\r\n    this.projeto = this.data.projeto;\r\n    this.tipo = this.data.tipo;\r\n    this.model.projetoMySqlId = this.projeto.id;\r\n    this.model.tipo = this.tipo;\r\n\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close('Pizza!');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projeto-canvas-cria/projeto-canvas-cria.component.ts","module.exports = \"<h2 mat-dialog-title>Cadastro de Hipótese - {{projeto.nome}}</h2>\\n\\n<form #hipoteseForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n<mat-dialog-content>\\n  <div class=\\\"example-container\\\">\\n    <mat-form-field >\\n      <textarea [(ngModel)]=\\\"model.descricao\\\"  \\n        name=\\\"descricao\\\" matInput rows=\\\"6\\\" placeholder=\\\"Descricao\\\"></textarea>\\n    </mat-form-field>\\n  </div>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-button>Enviar</button>\\n  <button mat-button mat-dialog-close>Cancelar</button>\\n</mat-dialog-actions>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-canvas-edita/projeto-canvas-edita.component.html\n// module id = ./src/app/projeto-canvas-edita/projeto-canvas-edita.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-canvas-edita/projeto-canvas-edita.component.scss\n// module id = ./src/app/projeto-canvas-edita/projeto-canvas-edita.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { ProjetoMySql } from '../shared/sdk/models';\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\n\nimport { ProjetoCanvasMySql } from '../shared/sdk/models/ProjetoCanvasMySql';\nimport { ProjetoCanvasMySqlApi } from '../shared/sdk/services/custom/ProjetoCanvasMySql';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-projeto-canvas-edita',\n  templateUrl: './projeto-canvas-edita.component.html',\n  styleUrls: ['./projeto-canvas-edita.component.scss']\n})\nexport class ProjetoCanvasEditaComponent implements OnInit {\n\n  projeto: ProjetoMySql;\n  tipo: string;\n  model: ProjetoCanvasMySql;\n\n  constructor(private servico: ProjetoCanvasMySqlApi, public dialogRef: MatDialogRef<ProjetoCanvasEditaComponent>\n    , @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n  onSubmit() {\n    console.log('Model: ' + JSON.stringify(this.model));\n    this.servico\n      .updateAttributes(this.model.id, this.model, (err, obj) => {\n        console.log(\"Erro:\" + err.message);\n      }).subscribe((e: any) => {\n        console.log(JSON.stringify(e));\n        this.closeDialog();\n      });\n  }\n\n  ngOnInit() {\n    console.log('Data: ', JSON.stringify(this.data));\n    this.model = this.data.edicao;\n    this.projeto = this.data.projeto;\n    //this.tipo = this.data.tipo;\n    //this.model.projetoMySqlId = this.projeto.id;\n    //this.model.tipo = this.tipo;\n\n\n  }\n\n  closeDialog() {\n    this.dialogRef.close('Pizza!');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projeto-canvas-edita/projeto-canvas-edita.component.ts","module.exports = \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h4 class=\\\"title\\\">Projeto - Novo</h4>\\r\\n          </div>\\r\\n          <form #projetoForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"nome\\\">Nome do Projeto</label>\\r\\n              <input [(ngModel)]=\\\"model.nome\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"mercado\\\">Mercado</label>\\r\\n              <input [(ngModel)]=\\\"model.mercado\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mercado\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"valor\\\">Valor</label>\\r\\n              <input [(ngModel)]=\\\"model.valor\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"valor\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"dor\\\">Dor</label>\\r\\n              <input [(ngModel)]=\\\"model.dor\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dor\\\">\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Enviar</button>\\r\\n            <button type=\\\"cancel\\\" class=\\\"btn btn-cancel btn-sm\\\">Cancelar</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-cria/projeto-cria.component.html\n// module id = ./src/app/projeto-cria/projeto-cria.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-cria/projeto-cria.component.scss\n// module id = ./src/app/projeto-cria/projeto-cria.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { ProjetoService } from '../servicos/projeto.service';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-projeto-cria',\r\n  templateUrl: './projeto-cria.component.html',\r\n  styleUrls: ['./projeto-cria.component.scss']\r\n})\r\nexport class ProjetoCriaComponent implements OnInit {\r\n\r\n  model = new ProjetoMySql();\r\n\r\n  constructor(private servico: ProjetoMySqlApi,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log(\"Projeto: \", this.model);\r\n    this.servico\r\n      .create(this.model, (err,obj) => {\r\n      console.log(\"Erro:\" + err.message);\r\n      }).subscribe((e:any)  => { \r\n        console.log(JSON.stringify(e));\r\n        this.router.navigate(['projetos']);\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projeto-cria/projeto-cria.component.ts","module.exports = \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h4 class=\\\"title\\\">Projeto - Novo</h4>\\r\\n          </div>\\r\\n          <form #projetoForm=\\\"ngForm\\\" class=\\\"content\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"nome\\\">Nome do Projeto</label>\\r\\n              <input [(ngModel)]=\\\"model.nome\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"mercado\\\">Mercado</label>\\r\\n              <input [(ngModel)]=\\\"model.mercado\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mercado\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"valor\\\">Valor</label>\\r\\n              <input [(ngModel)]=\\\"model.valor\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"valor\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"dor\\\">Dor</label>\\r\\n              <input [(ngModel)]=\\\"model.dor\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dor\\\">\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Enviar</button>\\r\\n            <button type=\\\"cancel\\\" class=\\\"btn btn-cancel btn-sm\\\">Cancelar</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-edita/projeto-edita.component.html\n// module id = ./src/app/projeto-edita/projeto-edita.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-edita/projeto-edita.component.scss\n// module id = ./src/app/projeto-edita/projeto-edita.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projeto-edita',\r\n  templateUrl: './projeto-edita.component.html',\r\n  styleUrls: ['./projeto-edita.component.scss']\r\n})\r\nexport class ProjetoEditaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projeto-edita/projeto-edita.component.ts","module.exports = \"<p>\\r\\n  projeto-exibe works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-exibe/projeto-exibe.component.html\n// module id = ./src/app/projeto-exibe/projeto-exibe.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projeto-exibe/projeto-exibe.component.scss\n// module id = ./src/app/projeto-exibe/projeto-exibe.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projeto-exibe',\r\n  templateUrl: './projeto-exibe.component.html',\r\n  styleUrls: ['./projeto-exibe.component.scss']\r\n})\r\nexport class ProjetoExibeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projeto-exibe/projeto-exibe.component.ts","module.exports = \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h4 class=\\\"title\\\">Projetos</h4>\\r\\n            \\r\\n            <a routerLink=\\\"/projetos/insere\\\" class=\\\"btn btn-primary btn-sm  \\\">Novo</a>\\r\\n          </div>\\r\\n          <div class=\\\"content table-responsive table-full-width\\\">\\r\\n            <table class=\\\"table table-hover table-striped\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Nome</th>\\r\\n                  <th>Mercado</th>\\r\\n                  <th></th>\\r\\n                  <th></th>\\r\\n                  <th></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let projeto of projetos\\\">\\r\\n                  <td>{{projeto.nome}}</td>\\r\\n                  <td>{{projeto.mercado}}</td>\\r\\n                  <td><a routerLink=\\\"/dorGanhoCanvas/{{projeto.id}}\\\">Ganho/Dor</a></td>\\r\\n                  <td><a routerLink=\\\"/projetoCanvas/{{projeto.id}}\\\">Negócio</a></td>\\r\\n                  <td><a routerLink=\\\"/mvpCanvas/{{projeto.id}}\\\">Mvp</a></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projetos/projetos.component.html\n// module id = ./src/app/projetos/projetos.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/projetos/projetos.component.scss\n// module id = ./src/app/projetos/projetos.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ProjetoService } from '../servicos/projeto.service';\r\n\r\nimport { ProjetoMySql } from '../shared/sdk/models';\r\nimport { ProjetoMySqlApi } from '../shared/sdk/services/custom/ProjetoMySql';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-projetos',\r\n  templateUrl: './projetos.component.html',\r\n  styleUrls: ['./projetos.component.scss']\r\n})\r\n\r\nexport class ProjetosComponent implements OnInit {\r\n\r\n  projetos: ProjetoMySql[];\r\n  errMess: string;\r\n\r\n  constructor(private projetoService: ProjetoMySqlApi,\r\n              private router: Router) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.projetoService.find()\r\n      .subscribe((projetos: ProjetoMySql[]) => \r\n        this.projetos = projetos\r\n       );\r\n    \r\n  }\r\n\r\n  goCanvas(id: number){        \r\n    this.router.navigate(['projetoCanvas/' + id]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/projetos/projetos.component.ts","import { Projeto } from \"../../model/projeto\";\r\n\r\n\r\nexport const  PROJETOS : Projeto[] = [\r\n    new Projeto(1, 'Loja Roupas Feminina', 'Moda Feminina', 'Aumentar Pedidos', 'Difculdade de Organizacao'),\r\n    new Projeto(2, 'Aplicativos de Preços', 'Tecnologia', 'Conhecer produtos e preços', '-'),\r\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/servicos/auxiliar/projeto-exemplo.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { Projeto } from '../model/projeto';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PROJETOS } from '../servicos/auxiliar/projeto-exemplo';\r\n\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map'\r\n\r\n@Injectable()\r\nexport class ProjetoService {\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  \r\n  getPratos(): Observable<Projeto[]> {\r\n    return Observable.of(PROJETOS).delay(2000);\r\n    \r\n  }\r\n\r\n  getPrato(id: number) : Observable<Projeto> {\r\n    return Observable.of(PROJETOS.filter((projeto) => (projeto.id===id))[0]).delay(2000);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servicos/projeto.service.ts","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { UserApi } from './services/custom/User';\nimport { ProjetoApi } from './services/custom/Projeto';\nimport { ProjetoCanvasApi } from './services/custom/ProjetoCanvas';\nimport { ProjetoMySqlApi } from './services/custom/ProjetoMySql';\nimport { ProjetoCanvasMySqlApi } from './services/custom/ProjetoCanvasMySql';\nimport { MvpCanvasMySqlApi } from './services/custom/MvpCanvasMySql';\nimport { GanhoDorCanvasMySqlApi } from './services/custom/GanhoDorCanvasMySql';\nimport { PaginaValidacaoWebApi } from './services/custom/PaginaValidacaoWeb';\nimport { ItemValidacaoPaginaApi } from './services/custom/ItemValidacaoPagina';\nimport { RegistroInteresseApi } from './services/custom/RegistroInteresse';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpClientModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        RealTime,\n        UserApi,\n        ProjetoApi,\n        ProjetoCanvasApi,\n        ProjetoMySqlApi,\n        ProjetoCanvasMySqlApi,\n        MvpCanvasMySqlApi,\n        GanhoDorCanvasMySqlApi,\n        PaginaValidacaoWebApi,\n        ItemValidacaoPaginaApi,\n        RegistroInteresseApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/index.ts","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//0.0.0.0:21101';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/lb.config.ts","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/BaseModels.ts","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/FireLoop.ts","/* tslint:disable */\nimport 'rxjs/add/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/merge';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return Observable.merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/FireLoopRef.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface GanhoDorCanvasMySqlInterface {\n  \"id\"?: number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\"?: number;\n}\n\nexport class GanhoDorCanvasMySql implements GanhoDorCanvasMySqlInterface {\n  \"id\": number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\": number;\n  constructor(data?: GanhoDorCanvasMySqlInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `GanhoDorCanvasMySql`.\n   */\n  public static getModelName() {\n    return \"GanhoDorCanvasMySql\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of GanhoDorCanvasMySql for dynamic purposes.\n  **/\n  public static factory(data: GanhoDorCanvasMySqlInterface): GanhoDorCanvasMySql{\n    return new GanhoDorCanvasMySql(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'GanhoDorCanvasMySql',\n      plural: 'GanhoDorCanvasMySqls',\n      path: 'GanhoDorCanvasMySqls',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"descricao\": {\n          name: 'descricao',\n          type: 'string'\n        },\n        \"tipo\": {\n          name: 'tipo',\n          type: 'string'\n        },\n        \"projetoMySqlId\": {\n          name: 'projetoMySqlId',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/GanhoDorCanvasMySql.ts","/* tslint:disable */\nimport {\n  ProjetoCanvasMySql\n} from '../index';\n\ndeclare var Object: any;\nexport interface ItemValidacaoPaginaInterface {\n  \"id\"?: number;\n  \"urlImagem\"?: string;\n  \"titulo\"?: string;\n  \"descricaoSimples\"?: string;\n  \"bullet1\"?: string;\n  \"bullet2\"?: string;\n  \"bullet3\"?: string;\n  \"projetoCanvasMySqlId\"?: number;\n  \"paginaValidacaoWebId\"?: number;\n  projetoCanvasMySql?: ProjetoCanvasMySql;\n}\n\nexport class ItemValidacaoPagina implements ItemValidacaoPaginaInterface {\n  \"id\": number;\n  \"urlImagem\": string;\n  \"titulo\": string;\n  \"descricaoSimples\": string;\n  \"bullet1\": string;\n  \"bullet2\": string;\n  \"bullet3\": string;\n  \"projetoCanvasMySqlId\": number;\n  \"paginaValidacaoWebId\": number;\n  projetoCanvasMySql: ProjetoCanvasMySql;\n  constructor(data?: ItemValidacaoPaginaInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ItemValidacaoPagina`.\n   */\n  public static getModelName() {\n    return \"ItemValidacaoPagina\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ItemValidacaoPagina for dynamic purposes.\n  **/\n  public static factory(data: ItemValidacaoPaginaInterface): ItemValidacaoPagina{\n    return new ItemValidacaoPagina(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ItemValidacaoPagina',\n      plural: 'ItemValidacaoPaginas',\n      path: 'ItemValidacaoPaginas',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"urlImagem\": {\n          name: 'urlImagem',\n          type: 'string'\n        },\n        \"titulo\": {\n          name: 'titulo',\n          type: 'string'\n        },\n        \"descricaoSimples\": {\n          name: 'descricaoSimples',\n          type: 'string'\n        },\n        \"bullet1\": {\n          name: 'bullet1',\n          type: 'string'\n        },\n        \"bullet2\": {\n          name: 'bullet2',\n          type: 'string'\n        },\n        \"bullet3\": {\n          name: 'bullet3',\n          type: 'string'\n        },\n        \"projetoCanvasMySqlId\": {\n          name: 'projetoCanvasMySqlId',\n          type: 'number'\n        },\n        \"paginaValidacaoWebId\": {\n          name: 'paginaValidacaoWebId',\n          type: 'number'\n        },\n      },\n      relations: {\n        projetoCanvasMySql: {\n          name: 'projetoCanvasMySql',\n          type: 'ProjetoCanvasMySql',\n          model: 'ProjetoCanvasMySql',\n          relationType: 'belongsTo',\n                  keyFrom: 'projetoCanvasMySqlId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/ItemValidacaoPagina.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface MvpCanvasMySqlInterface {\n  \"id\"?: number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\"?: number;\n}\n\nexport class MvpCanvasMySql implements MvpCanvasMySqlInterface {\n  \"id\": number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\": number;\n  constructor(data?: MvpCanvasMySqlInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `MvpCanvasMySql`.\n   */\n  public static getModelName() {\n    return \"MvpCanvasMySql\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of MvpCanvasMySql for dynamic purposes.\n  **/\n  public static factory(data: MvpCanvasMySqlInterface): MvpCanvasMySql{\n    return new MvpCanvasMySql(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'MvpCanvasMySql',\n      plural: 'MvpCanvasMySqls',\n      path: 'MvpCanvasMySqls',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"descricao\": {\n          name: 'descricao',\n          type: 'string'\n        },\n        \"tipo\": {\n          name: 'tipo',\n          type: 'string'\n        },\n        \"projetoMySqlId\": {\n          name: 'projetoMySqlId',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/MvpCanvasMySql.ts","/* tslint:disable */\nimport {\n  ItemValidacaoPagina,\n  RegistroInteresse\n} from '../index';\n\ndeclare var Object: any;\nexport interface PaginaValidacaoWebInterface {\n  \"id\"?: number;\n  \"nome\"?: string;\n  itemValidacaoPaginas?: ItemValidacaoPagina[];\n  registroInteresses?: RegistroInteresse[];\n}\n\nexport class PaginaValidacaoWeb implements PaginaValidacaoWebInterface {\n  \"id\": number;\n  \"nome\": string;\n  itemValidacaoPaginas: ItemValidacaoPagina[];\n  registroInteresses: RegistroInteresse[];\n  constructor(data?: PaginaValidacaoWebInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PaginaValidacaoWeb`.\n   */\n  public static getModelName() {\n    return \"PaginaValidacaoWeb\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PaginaValidacaoWeb for dynamic purposes.\n  **/\n  public static factory(data: PaginaValidacaoWebInterface): PaginaValidacaoWeb{\n    return new PaginaValidacaoWeb(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PaginaValidacaoWeb',\n      plural: 'PaginaValidacaoWebs',\n      path: 'PaginaValidacaoWebs',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"nome\": {\n          name: 'nome',\n          type: 'string'\n        },\n      },\n      relations: {\n        itemValidacaoPaginas: {\n          name: 'itemValidacaoPaginas',\n          type: 'ItemValidacaoPagina[]',\n          model: 'ItemValidacaoPagina',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'paginaValidacaoWebId'\n        },\n        registroInteresses: {\n          name: 'registroInteresses',\n          type: 'RegistroInteresse[]',\n          model: 'RegistroInteresse',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'paginaValidacaoWebId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/PaginaValidacaoWeb.ts","/* tslint:disable */\nimport {\n  ProjetoCanvas\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProjetoInterface {\n  \"nome\": string;\n  \"valor\"?: string;\n  \"mercado\"?: string;\n  \"id\"?: number;\n  \"dor\"?: string;\n  ProjetoCanvasRel?: ProjetoCanvas[];\n}\n\nexport class Projeto implements ProjetoInterface {\n  \"nome\": string;\n  \"valor\": string;\n  \"mercado\": string;\n  \"id\": number;\n  \"dor\": string;\n  ProjetoCanvasRel: ProjetoCanvas[];\n  constructor(data?: ProjetoInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Projeto`.\n   */\n  public static getModelName() {\n    return \"Projeto\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Projeto for dynamic purposes.\n  **/\n  public static factory(data: ProjetoInterface): Projeto{\n    return new Projeto(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Projeto',\n      plural: 'projetos',\n      path: 'projetos',\n      idName: 'id',\n      properties: {\n        \"nome\": {\n          name: 'nome',\n          type: 'string'\n        },\n        \"valor\": {\n          name: 'valor',\n          type: 'string'\n        },\n        \"mercado\": {\n          name: 'mercado',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"dor\": {\n          name: 'dor',\n          type: 'string'\n        },\n      },\n      relations: {\n        ProjetoCanvasRel: {\n          name: 'ProjetoCanvasRel',\n          type: 'ProjetoCanvas[]',\n          model: 'ProjetoCanvas',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'projetoId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/Projeto.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProjetoCanvasInterface {\n  \"id\"?: number;\n  \"descricao\": string;\n  \"idProjeto\": number;\n  \"tipo\": string;\n  \"projetoId\"?: number;\n}\n\nexport class ProjetoCanvas implements ProjetoCanvasInterface {\n  \"id\": number;\n  \"descricao\": string;\n  \"idProjeto\": number;\n  \"tipo\": string;\n  \"projetoId\": number;\n  constructor(data?: ProjetoCanvasInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoCanvas`.\n   */\n  public static getModelName() {\n    return \"ProjetoCanvas\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProjetoCanvas for dynamic purposes.\n  **/\n  public static factory(data: ProjetoCanvasInterface): ProjetoCanvas{\n    return new ProjetoCanvas(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProjetoCanvas',\n      plural: 'ProjetoCanvases',\n      path: 'ProjetoCanvases',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"descricao\": {\n          name: 'descricao',\n          type: 'string'\n        },\n        \"idProjeto\": {\n          name: 'idProjeto',\n          type: 'number'\n        },\n        \"tipo\": {\n          name: 'tipo',\n          type: 'string'\n        },\n        \"projetoId\": {\n          name: 'projetoId',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/ProjetoCanvas.ts","/* tslint:disable */\nimport {\n  ItemValidacaoPagina\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProjetoCanvasMySqlInterface {\n  \"id\"?: number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\"?: number;\n  itemValidacaoPaginas?: ItemValidacaoPagina[];\n}\n\nexport class ProjetoCanvasMySql implements ProjetoCanvasMySqlInterface {\n  \"id\": number;\n  \"descricao\": string;\n  \"tipo\": string;\n  \"projetoMySqlId\": number;\n  itemValidacaoPaginas: ItemValidacaoPagina[];\n  constructor(data?: ProjetoCanvasMySqlInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoCanvasMySql`.\n   */\n  public static getModelName() {\n    return \"ProjetoCanvasMySql\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProjetoCanvasMySql for dynamic purposes.\n  **/\n  public static factory(data: ProjetoCanvasMySqlInterface): ProjetoCanvasMySql{\n    return new ProjetoCanvasMySql(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProjetoCanvasMySql',\n      plural: 'ProjetoCanvasMySqls',\n      path: 'ProjetoCanvasMySqls',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"descricao\": {\n          name: 'descricao',\n          type: 'string'\n        },\n        \"tipo\": {\n          name: 'tipo',\n          type: 'string'\n        },\n        \"projetoMySqlId\": {\n          name: 'projetoMySqlId',\n          type: 'number'\n        },\n      },\n      relations: {\n        itemValidacaoPaginas: {\n          name: 'itemValidacaoPaginas',\n          type: 'ItemValidacaoPagina[]',\n          model: 'ItemValidacaoPagina',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'projetoCanvasMySqlId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/ProjetoCanvasMySql.ts","/* tslint:disable */\nimport {\n  ProjetoCanvasMySql,\n  MvpCanvasMySql,\n  GanhoDorCanvasMySql\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProjetoMySqlInterface {\n  \"id\"?: number;\n  \"nome\": string;\n  \"valor\"?: string;\n  \"mercado\"?: string;\n  \"dor\"?: string;\n  projetoCanvasMySqls?: ProjetoCanvasMySql[];\n  mvpCanvasMySqls?: MvpCanvasMySql[];\n  ganhoDorCanvasMySqls?: GanhoDorCanvasMySql[];\n}\n\nexport class ProjetoMySql implements ProjetoMySqlInterface {\n  \"id\": number;\n  \"nome\": string;\n  \"valor\": string;\n  \"mercado\": string;\n  \"dor\": string;\n  projetoCanvasMySqls: ProjetoCanvasMySql[];\n  mvpCanvasMySqls: MvpCanvasMySql[];\n  ganhoDorCanvasMySqls: GanhoDorCanvasMySql[];\n  constructor(data?: ProjetoMySqlInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoMySql`.\n   */\n  public static getModelName() {\n    return \"ProjetoMySql\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProjetoMySql for dynamic purposes.\n  **/\n  public static factory(data: ProjetoMySqlInterface): ProjetoMySql{\n    return new ProjetoMySql(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProjetoMySql',\n      plural: 'ProjetoMySqls',\n      path: 'ProjetoMySqls',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"nome\": {\n          name: 'nome',\n          type: 'string'\n        },\n        \"valor\": {\n          name: 'valor',\n          type: 'string'\n        },\n        \"mercado\": {\n          name: 'mercado',\n          type: 'string'\n        },\n        \"dor\": {\n          name: 'dor',\n          type: 'string'\n        },\n      },\n      relations: {\n        projetoCanvasMySqls: {\n          name: 'projetoCanvasMySqls',\n          type: 'ProjetoCanvasMySql[]',\n          model: 'ProjetoCanvasMySql',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'projetoMySqlId'\n        },\n        mvpCanvasMySqls: {\n          name: 'mvpCanvasMySqls',\n          type: 'MvpCanvasMySql[]',\n          model: 'MvpCanvasMySql',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'projetoMySqlId'\n        },\n        ganhoDorCanvasMySqls: {\n          name: 'ganhoDorCanvasMySqls',\n          type: 'GanhoDorCanvasMySql[]',\n          model: 'GanhoDorCanvasMySql',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'projetoMySqlId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/ProjetoMySql.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface RegistroInteresseInterface {\n  \"id\"?: number;\n  \"nome\"?: string;\n  \"data\"?: Date;\n  \"email\"?: string;\n  \"paginaValidacaoWebId\"?: number;\n}\n\nexport class RegistroInteresse implements RegistroInteresseInterface {\n  \"id\": number;\n  \"nome\": string;\n  \"data\": Date;\n  \"email\": string;\n  \"paginaValidacaoWebId\": number;\n  constructor(data?: RegistroInteresseInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `RegistroInteresse`.\n   */\n  public static getModelName() {\n    return \"RegistroInteresse\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of RegistroInteresse for dynamic purposes.\n  **/\n  public static factory(data: RegistroInteresseInterface): RegistroInteresse{\n    return new RegistroInteresse(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'RegistroInteresse',\n      plural: 'RegistroInteresses',\n      path: 'RegistroInteresses',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"nome\": {\n          name: 'nome',\n          type: 'string'\n        },\n        \"data\": {\n          name: 'data',\n          type: 'Date'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"paginaValidacaoWebId\": {\n          name: 'paginaValidacaoWebId',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/RegistroInteresse.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: number;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": number;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      idName: 'id',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/User.ts","/* tslint:disable */\nexport * from './User';\nexport * from './Projeto';\nexport * from './ProjetoCanvas';\nexport * from './ProjetoMySql';\nexport * from './ProjetoCanvasMySql';\nexport * from './MvpCanvasMySql';\nexport * from './GanhoDorCanvasMySql';\nexport * from './PaginaValidacaoWeb';\nexport * from './ItemValidacaoPagina';\nexport * from './RegistroInteresse';\nexport * from './BaseModels';\nexport * from './FireLoopRef';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/index.ts","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/auth.service.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, url, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/base.service.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(errorResponse: HttpErrorResponse): any {\n    return Observable.throw(errorResponse.error.error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/error.service.ts","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './base.service';\nexport * from './real.time';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/index.ts","/* tslint:disable */\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/io.service.ts","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { share } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/real.time.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { GanhoDorCanvasMySql } from '../../models/GanhoDorCanvasMySql';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `GanhoDorCanvasMySql` model.\n */\n@Injectable()\nexport class GanhoDorCanvasMySqlApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `GanhoDorCanvasMySql` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/GanhoDorCanvasMySqls\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id GanhoDorCanvasMySql id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `GanhoDorCanvasMySql` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/GanhoDorCanvasMySqls/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `GanhoDorCanvasMySql`.\n   */\n  public getModelName() {\n    return \"GanhoDorCanvasMySql\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/GanhoDorCanvasMySql.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { ItemValidacaoPagina } from '../../models/ItemValidacaoPagina';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProjetoCanvasMySql } from '../../models/ProjetoCanvasMySql';\n\n\n/**\n * Api services for the `ItemValidacaoPagina` model.\n */\n@Injectable()\nexport class ItemValidacaoPaginaApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation projetoCanvasMySql.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public getProjetoCanvasMySql(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public findByIdProjetoCanvasMySqlItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdProjetoCanvasMySqlItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public updateByIdProjetoCanvasMySqlItemValidacaoPaginas(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries itemValidacaoPaginas of ProjetoCanvasMySql.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public getProjetoCanvasMySqlItemValidacaoPaginas(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public createProjetoCanvasMySqlItemValidacaoPaginas(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteProjetoCanvasMySqlItemValidacaoPaginas(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts itemValidacaoPaginas of ProjetoCanvasMySql.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countProjetoCanvasMySqlItemValidacaoPaginas(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ItemValidacaoPagina id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ItemValidacaoPagina` object.)\n   * </em>\n   */\n  public createManyProjetoCanvasMySqlItemValidacaoPaginas(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ItemValidacaoPaginas/:id/projetoCanvasMySql/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ItemValidacaoPagina`.\n   */\n  public getModelName() {\n    return \"ItemValidacaoPagina\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/ItemValidacaoPagina.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { MvpCanvasMySql } from '../../models/MvpCanvasMySql';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `MvpCanvasMySql` model.\n */\n@Injectable()\nexport class MvpCanvasMySqlApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `MvpCanvasMySql` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/MvpCanvasMySqls\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id MvpCanvasMySql id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `MvpCanvasMySql` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/MvpCanvasMySqls/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `MvpCanvasMySql`.\n   */\n  public getModelName() {\n    return \"MvpCanvasMySql\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/MvpCanvasMySql.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { PaginaValidacaoWeb } from '../../models/PaginaValidacaoWeb';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ItemValidacaoPagina } from '../../models/ItemValidacaoPagina';\nimport { RegistroInteresse } from '../../models/RegistroInteresse';\n\n\n/**\n * Api services for the `PaginaValidacaoWeb` model.\n */\n@Injectable()\nexport class PaginaValidacaoWebApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public findByIdItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public updateByIdItemValidacaoPaginas(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for registroInteresses.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for registroInteresses\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public findByIdRegistroInteresses(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for registroInteresses.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for registroInteresses\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdRegistroInteresses(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for registroInteresses.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} fk Foreign key for registroInteresses\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public updateByIdRegistroInteresses(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries itemValidacaoPaginas of PaginaValidacaoWeb.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public getItemValidacaoPaginas(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public createItemValidacaoPaginas(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all itemValidacaoPaginas of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteItemValidacaoPaginas(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts itemValidacaoPaginas of PaginaValidacaoWeb.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countItemValidacaoPaginas(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries registroInteresses of PaginaValidacaoWeb.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public getRegistroInteresses(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in registroInteresses of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public createRegistroInteresses(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all registroInteresses of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteRegistroInteresses(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts registroInteresses of PaginaValidacaoWeb.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countRegistroInteresses(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches belongsTo relation projetoCanvasMySql.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {any} nk Foreign key for itemValidacaoPaginas.\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public getItemValidacaoPaginasProjetoCanvasMySql(id: any, nk: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas/:nk/projetoCanvasMySql\";\n    let _routeParams: any = {\n      id: id,\n      nk: nk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public createManyItemValidacaoPaginas(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in registroInteresses of this model.\n   *\n   * @param {any} id PaginaValidacaoWeb id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PaginaValidacaoWeb` object.)\n   * </em>\n   */\n  public createManyRegistroInteresses(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PaginaValidacaoWebs/:id/registroInteresses\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PaginaValidacaoWeb`.\n   */\n  public getModelName() {\n    return \"PaginaValidacaoWeb\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/PaginaValidacaoWeb.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Projeto } from '../../models/Projeto';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProjetoCanvas } from '../../models/ProjetoCanvas';\n\n\n/**\n * Api services for the `Projeto` model.\n */\n@Injectable()\nexport class ProjetoApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for ProjetoCanvasRel.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {any} fk Foreign key for ProjetoCanvasRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public findByIdProjetoCanvasRel(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for ProjetoCanvasRel.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {any} fk Foreign key for ProjetoCanvasRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdProjetoCanvasRel(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for ProjetoCanvasRel.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {any} fk Foreign key for ProjetoCanvasRel\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public updateByIdProjetoCanvasRel(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries ProjetoCanvasRel of projeto.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public getProjetoCanvasRel(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in ProjetoCanvasRel of this model.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public createProjetoCanvasRel(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all ProjetoCanvasRel of this model.\n   *\n   * @param {any} id projeto id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteProjetoCanvasRel(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts ProjetoCanvasRel of projeto.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countProjetoCanvasRel(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in ProjetoCanvasRel of this model.\n   *\n   * @param {any} id projeto id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Projeto` object.)\n   * </em>\n   */\n  public createManyProjetoCanvasRel(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/projetos/:id/ProjetoCanvasRel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Projeto`.\n   */\n  public getModelName() {\n    return \"Projeto\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/Projeto.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { ProjetoCanvas } from '../../models/ProjetoCanvas';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProjetoCanvas` model.\n */\n@Injectable()\nexport class ProjetoCanvasApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvas` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvases\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id ProjetoCanvas id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvas` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvases/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoCanvas`.\n   */\n  public getModelName() {\n    return \"ProjetoCanvas\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/ProjetoCanvas.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { ProjetoCanvasMySql } from '../../models/ProjetoCanvasMySql';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ItemValidacaoPagina } from '../../models/ItemValidacaoPagina';\n\n\n/**\n * Api services for the `ProjetoCanvasMySql` model.\n */\n@Injectable()\nexport class ProjetoCanvasMySqlApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public findByIdItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdItemValidacaoPaginas(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for itemValidacaoPaginas.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {any} fk Foreign key for itemValidacaoPaginas\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public updateByIdItemValidacaoPaginas(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries itemValidacaoPaginas of ProjetoCanvasMySql.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public getItemValidacaoPaginas(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public createItemValidacaoPaginas(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteItemValidacaoPaginas(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts itemValidacaoPaginas of ProjetoCanvasMySql.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countItemValidacaoPaginas(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches belongsTo relation projetoCanvasMySql.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {any} nk Foreign key for itemValidacaoPaginas.\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public getItemValidacaoPaginasProjetoCanvasMySql(id: any, nk: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas/:nk/projetoCanvasMySql\";\n    let _routeParams: any = {\n      id: id,\n      nk: nk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in itemValidacaoPaginas of this model.\n   *\n   * @param {any} id ProjetoCanvasMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoCanvasMySql` object.)\n   * </em>\n   */\n  public createManyItemValidacaoPaginas(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoCanvasMySqls/:id/itemValidacaoPaginas\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoCanvasMySql`.\n   */\n  public getModelName() {\n    return \"ProjetoCanvasMySql\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/ProjetoCanvasMySql.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { ProjetoMySql } from '../../models/ProjetoMySql';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProjetoCanvasMySql } from '../../models/ProjetoCanvasMySql';\nimport { MvpCanvasMySql } from '../../models/MvpCanvasMySql';\nimport { GanhoDorCanvasMySql } from '../../models/GanhoDorCanvasMySql';\n\n\n/**\n * Api services for the `ProjetoMySql` model.\n */\n@Injectable()\nexport class ProjetoMySqlApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for projetoCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for projetoCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public findByIdProjetoCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for projetoCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for projetoCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdProjetoCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for projetoCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for projetoCanvasMySqls\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public updateByIdProjetoCanvasMySqls(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for mvpCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for mvpCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public findByIdMvpCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for mvpCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for mvpCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdMvpCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for mvpCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for mvpCanvasMySqls\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public updateByIdMvpCanvasMySqls(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for ganhoDorCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for ganhoDorCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public findByIdGanhoDorCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for ganhoDorCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for ganhoDorCanvasMySqls\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdGanhoDorCanvasMySqls(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for ganhoDorCanvasMySqls.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {any} fk Foreign key for ganhoDorCanvasMySqls\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public updateByIdGanhoDorCanvasMySqls(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries projetoCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public getProjetoCanvasMySqls(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in projetoCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createProjetoCanvasMySqls(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all projetoCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteProjetoCanvasMySqls(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts projetoCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countProjetoCanvasMySqls(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries mvpCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public getMvpCanvasMySqls(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in mvpCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createMvpCanvasMySqls(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all mvpCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteMvpCanvasMySqls(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts mvpCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countMvpCanvasMySqls(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries ganhoDorCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public getGanhoDorCanvasMySqls(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in ganhoDorCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createGanhoDorCanvasMySqls(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all ganhoDorCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteGanhoDorCanvasMySqls(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts ganhoDorCanvasMySqls of ProjetoMySql.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countGanhoDorCanvasMySqls(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in projetoCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createManyProjetoCanvasMySqls(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/projetoCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in mvpCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createManyMvpCanvasMySqls(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/mvpCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in ganhoDorCanvasMySqls of this model.\n   *\n   * @param {any} id ProjetoMySql id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProjetoMySql` object.)\n   * </em>\n   */\n  public createManyGanhoDorCanvasMySqls(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProjetoMySqls/:id/ganhoDorCanvasMySqls\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProjetoMySql`.\n   */\n  public getModelName() {\n    return \"ProjetoMySql\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/ProjetoMySql.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { RegistroInteresse } from '../../models/RegistroInteresse';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `RegistroInteresse` model.\n */\n@Injectable()\nexport class RegistroInteresseApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RegistroInteresse` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/RegistroInteresses\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id RegistroInteresse id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RegistroInteresse` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/RegistroInteresses/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `RegistroInteresse`.\n   */\n  public getModelName() {\n    return \"RegistroInteresse\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/RegistroInteresse.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { Projeto } from '../../models/Projeto';\nimport { ProjetoCanvas } from '../../models/ProjetoCanvas';\nimport { ProjetoMySql } from '../../models/ProjetoMySql';\nimport { ProjetoCanvasMySql } from '../../models/ProjetoCanvasMySql';\nimport { MvpCanvasMySql } from '../../models/MvpCanvasMySql';\nimport { GanhoDorCanvasMySql } from '../../models/GanhoDorCanvasMySql';\nimport { PaginaValidacaoWeb } from '../../models/PaginaValidacaoWeb';\nimport { ItemValidacaoPagina } from '../../models/ItemValidacaoPagina';\nimport { RegistroInteresse } from '../../models/RegistroInteresse';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    User: User,\n    Projeto: Projeto,\n    ProjetoCanvas: ProjetoCanvas,\n    ProjetoMySql: ProjetoMySql,\n    ProjetoCanvasMySql: ProjetoCanvasMySql,\n    MvpCanvasMySql: MvpCanvasMySql,\n    GanhoDorCanvasMySql: GanhoDorCanvasMySql,\n    PaginaValidacaoWeb: PaginaValidacaoWeb,\n    ItemValidacaoPagina: ItemValidacaoPagina,\n    RegistroInteresse: RegistroInteresse,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/SDKModels.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { User } from '../../models/User';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * O corpo de resposta contém propriedades do AccessToken criado no login.\n   * Dependendo do valor do parâmetro `include`, o corpo poderá conter propriedades adicionais:\n   * \n   *   - `user` - `U+007BUserU+007D` - Dados do usuário com login efetuado atualmente. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .pipe(\n        map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      )\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/User.ts","/* tslint:disable */\nexport * from './User';\nexport * from './Projeto';\nexport * from './ProjetoCanvas';\nexport * from './ProjetoMySql';\nexport * from './ProjetoCanvasMySql';\nexport * from './MvpCanvasMySql';\nexport * from './GanhoDorCanvasMySql';\nexport * from './PaginaValidacaoWeb';\nexport * from './ItemValidacaoPagina';\nexport * from './RegistroInteresse';\nexport * from './SDKModels';\nexport * from './logger.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/index.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/logger.service.ts","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/index.ts","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.browser.ts","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.connections.ts","/* tslint:disable */\n/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.driver.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/cookie.browser.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/storage.browser.ts","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/storage.swaps.ts","module.exports = \"<div class=\\\"sidebar-wrapper\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <a href=\\\"http://www.creative-tim.com\\\" class=\\\"simple-text\\\">\\r\\n      <div class=\\\"logo-img\\\">\\r\\n        <img src=\\\"/assets/img/angular2-logo-white.png\\\" />\\r\\n      </div>\\r\\n      valhip\\r\\n    </a>\\r\\n  </div>\\r\\n  <ul class=\\\"nav responsive-nav\\\">\\r\\n    <li>\\r\\n      <a routerLink=\\\"/projetos\\\">\\r\\n        <i class=\\\"fa fa-search\\\"></i>\\r\\n        <p>Projetos</p>\\r\\n      </a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a routerLink=\\\"/paginasValidadoras\\\">\\r\\n        <i class=\\\"fa fa-search\\\"></i>\\r\\n        <p>Paginas Validadoras</p>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sidebar/sidebar.component.html\n// module id = ./src/app/sidebar/sidebar.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sidebar/sidebar.component.scss\n// module id = ./src/app/sidebar/sidebar.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sidebar/sidebar.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}